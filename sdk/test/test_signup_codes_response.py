# coding: utf-8

"""
    Appify Hub's Consumer API

    The full specification of the service's API used by the end-users.

    The version of the OpenAPI document: Latest
    Contact: contact@appifyhub.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from appifyhub.models.signup_codes_response import SignupCodesResponse

class TestSignupCodesResponse(unittest.TestCase):
    """SignupCodesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SignupCodesResponse:
        """Test SignupCodesResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SignupCodesResponse`
        """
        model = SignupCodesResponse()
        if include_optional:
            return SignupCodesResponse(
                signup_codes = [
                    appifyhub.models.signup_code_response.SignupCodeResponse(
                        code = '', 
                        is_used = True, 
                        created_at = '', 
                        used_at = '', )
                    ],
                max_signup_codes = 56
            )
        else:
            return SignupCodesResponse(
                signup_codes = [
                    appifyhub.models.signup_code_response.SignupCodeResponse(
                        code = '', 
                        is_used = True, 
                        created_at = '', 
                        used_at = '', )
                    ],
                max_signup_codes = 56,
        )
        """

    def testSignupCodesResponse(self):
        """Test SignupCodesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
