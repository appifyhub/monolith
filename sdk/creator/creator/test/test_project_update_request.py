# coding: utf-8

"""
    Appify Hub's Creator API

    The full specification of the service's API used by the project administrators.

    The version of the OpenAPI document: Latest
    Contact: contact@appifyhub.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from appifyhub.models.project_update_request import ProjectUpdateRequest

class TestProjectUpdateRequest(unittest.TestCase):
    """ProjectUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectUpdateRequest:
        """Test ProjectUpdateRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectUpdateRequest`
        """
        model = ProjectUpdateRequest()
        if include_optional:
            return ProjectUpdateRequest(
                type = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                status = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                name = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                description = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                logo_url = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                website_url = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                max_users = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                anyone_can_search = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                on_hold = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                language_tag = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                requires_signup_codes = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                max_signup_codes_per_user = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                mailgun_config = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                twilio_config = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), ),
                firebase_config = appifyhub.models.settable_request.SettableRequest(
                    value = appifyhub.models.value.value(), )
            )
        else:
            return ProjectUpdateRequest(
        )
        """

    def testProjectUpdateRequest(self):
        """Test ProjectUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
