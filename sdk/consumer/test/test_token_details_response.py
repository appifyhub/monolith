# coding: utf-8

"""
    Appify Hub's Consumer API

    The full specification of the service's API used by the end-users.

    The version of the OpenAPI document: Latest
    Contact: contact@appifyhub.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from appifyhub.models.token_details_response import TokenDetailsResponse

class TestTokenDetailsResponse(unittest.TestCase):
    """TokenDetailsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TokenDetailsResponse:
        """Test TokenDetailsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TokenDetailsResponse`
        """
        model = TokenDetailsResponse()
        if include_optional:
            return TokenDetailsResponse(
                token_value = '',
                user_id = '',
                project_id = 56,
                universal_id = '',
                created_at = '',
                expires_at = '',
                authority = 'DEFAULT',
                is_blocked = True,
                origin = '',
                ip_address = '',
                geo = '',
                is_static = True
            )
        else:
            return TokenDetailsResponse(
                token_value = '',
                user_id = '',
                project_id = 56,
                universal_id = '',
                created_at = '',
                expires_at = '',
                authority = 'DEFAULT',
                is_blocked = True,
                is_static = True,
        )
        """

    def testTokenDetailsResponse(self):
        """Test TokenDetailsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
